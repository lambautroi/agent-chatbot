"""add chat_messages table

Revision ID: 24ccea0305ed
Revises: 04ca4e6d7f5c
Create Date: 2025-10-30 23:11:24.531733

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '24ccea0305ed'
down_revision: Union[str, Sequence[str], None] = '04ca4e6d7f5c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Tạo bảng chat_messages
    op.create_table('chat_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=True),
    sa.Column('sender_role', sa.Enum('USER', 'BOT', 'AGENT', name='senderrole'), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('chat_messages', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_chat_messages_id'), ['id'], unique=False)

    # XÓA FOREIGN KEY TRƯỚC KHI XÓA BẢNG
    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.drop_constraint('conversations_channel_id_fkey', type_='foreignkey')
        batch_op.drop_column('channel_id')

    # SAU ĐÓ MỚI XÓA CÁC BẢNG
    op.drop_table('channels')
    op.drop_table('tenant_api_keys')
    op.drop_table('billing')
    op.drop_table('embeds_meta')
    op.drop_table('uploads')
    op.drop_table('messages')

    # Cập nhật bảng customers
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('platform', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('platform_user_id', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.create_index(batch_op.f('ix_customers_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_customers_platform_user_id'), ['platform_user_id'], unique=False)
        batch_op.drop_column('phone')
        batch_op.drop_column('channel')

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('channel', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.drop_index(batch_op.f('ix_customers_platform_user_id'))
        batch_op.drop_index(batch_op.f('ix_customers_id'))
        batch_op.drop_column('created_at')
        batch_op.drop_column('platform_user_id')
        batch_op.drop_column('platform')

    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.add_column(sa.Column('channel_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key(batch_op.f('conversations_channel_id_fkey'), 'channels', ['channel_id'], ['id'])

    op.create_table('tenant_api_keys',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('provider', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('api_key_encrypted', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('tenant_api_keys_tenant_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('tenant_api_keys_pkey'))
    )
    op.create_table('channels',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('channels_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('platform', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('access_token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name='channels_tenant_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='channels_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('billing',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('usage_tokens', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('billing_cycle', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('invoice_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('paid', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('billing_tenant_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('billing_pkey'))
    )
    op.create_table('embeds_meta',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('vector_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('meta_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('embeds_meta_tenant_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('embeds_meta_pkey'))
    )
    op.create_table('uploads',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('filename', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('file_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('uploaded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('uploads_tenant_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('uploads_pkey'))
    )
    op.create_table('messages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('conversation_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sender', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], name=op.f('messages_conversation_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('messages_pkey'))
    )
    with op.batch_alter_table('chat_messages', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_chat_messages_id'))

    op.drop_table('chat_messages')
    # ### end Alembic commands ###
