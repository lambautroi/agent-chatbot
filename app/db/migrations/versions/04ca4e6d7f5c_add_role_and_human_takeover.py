"""add role and human takeover

Revision ID: 04ca4e6d7f5c
Revises: a620ee2682f9
Create Date: 2025-10-24 11:36:39.212892

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '04ca4e6d7f5c'
down_revision: Union[str, Sequence[str], None] = 'a620ee2682f9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

role_enum = sa.Enum('super_admin', 'tenant_admin', 'staff', name='roleenum')


def upgrade() -> None:
    """Upgrade schema."""
    # Tạo kiểu Enum trên PostgreSQL
    role_enum.create(op.get_bind(), checkfirst=True)

    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.add_column(sa.Column('mode', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('active_agent_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.create_index(batch_op.f('ix_conversations_id'), ['id'], unique=False)
        batch_op.create_foreign_key(None, 'users', ['active_agent_id'], ['id'])
        batch_op.drop_column('started_at')
        batch_op.drop_column('is_active')

    with op.batch_alter_table('tenants', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['name'])
        batch_op.create_unique_constraint(None, ['api_key'])
        batch_op.drop_column('domain')
        batch_op.drop_column('settings_json')
        batch_op.drop_column('plan')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('hashed_password', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('role', role_enum, nullable=True))  # Sử dụng biến role_enum đã tạo
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)
        batch_op.drop_column('name')
        batch_op.drop_column('contact')

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('contact', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_column('created_at')
        batch_op.drop_column('role')
        batch_op.drop_column('hashed_password')
        batch_op.drop_column('username')

    with op.batch_alter_table('tenants', schema=None) as batch_op:
        batch_op.add_column(sa.Column('plan', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('settings_json', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('domain', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('started_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_conversations_id'))
        batch_op.drop_column('updated_at')
        batch_op.drop_column('active_agent_id')
        batch_op.drop_column('mode')

    role_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
